--------------------------------------------------------------------------------
Command
--------------------------------------------------------------------------------

Note:
   Queueing JSON file 12-task-compile-register-ambiguous.json.

--------------------------------------------------------------------------------
Compilation
--------------------------------------------------------------------------------

File:
   12-task-compile-register-ambiguous.json

File:
   12-task-compile-register-ambiguous.json: 12-task-compile-register-ambiguous.cc

Scanning for FleCSI macros...

Macro:
   Name: flecsi_register_task
   Args: foo, ns, loc, single
   File: 12-task-compile-register-ambiguous.cc
   Line: 13

Error:
   Clang++ reports an error:
      reference to overloaded function could not be resolved; did you mean to call it with no arguments?
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_internal_return_type" (file 12-task-compile-register-ambiguous.cc, line 13)
      from macro "flecsi_register_task" (file 12-task-compile-register-ambiguous.cc, line 13)

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 10

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 8

Error:
   Clang++ reports an error:
      type 'void' cannot be used prior to '::' because it has no members
   File: /home/staley/flecsi/flecsi/utils/function_traits.h
   Line: 22

Note:
   Clang++ reports a note:
      in instantiation of template class 'flecsi::utils::function_traits_u<void>' requested here
   File: 12-task-compile-register-ambiguous.cc
   Line: 13

Error:
   Clang++ reports an error:
      reference to overloaded function could not be resolved; did you mean to call it with no arguments?
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_internal_arguments_type" (file 12-task-compile-register-ambiguous.cc, line 13)
      from macro "flecsi_register_task" (file 12-task-compile-register-ambiguous.cc, line 13)

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 10

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 8

Error:
   Clang++ reports an error:
      no type named 'arguments_type' in 'flecsi::utils::function_traits_u<void>'
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_internal_arguments_type" (file /home/staley/flecsi/flecsi/execution/execution.h, line 76)
      from macro "flecsi_register_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 277)

Error:
   Clang++ reports an error:
      reference to overloaded function could not be resolved; did you mean to call it with no arguments?
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_internal_return_type" (file 12-task-compile-register-ambiguous.cc, line 13)
      from macro "flecsi_register_task" (file 12-task-compile-register-ambiguous.cc, line 13)

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 10

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 8

Error:
   Clang++ reports an error:
      no type named 'return_type' in 'flecsi::utils::function_traits_u<void>'
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_internal_return_type" (file /home/staley/flecsi/flecsi/execution/execution.h, line 63)
      from macro "flecsi_register_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 284)

Error:
   Clang++ reports an error:
      redefinition of 'foo_tuple_delegate' as different kind of symbol
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from (file <scratch space>, line 96)
      from macro "flecsi_register_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 285)

Note:
   Clang++ reports a note:
      previous definition is here
   File: 12-task-compile-register-ambiguous.cc
   Line: 13

Error:
   Clang++ reports an error:
      expected ';' after top level declarator
   File: 12-task-compile-register-ambiguous.cc
   Line: 13
   Expansion trace:
      from macro "flecsi_register_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 285)

Macro:
   Name: flecsi_execute_task
   Args: foo, ns, single, 
   File: 12-task-compile-register-ambiguous.cc
   Line: 23

Error:
   Clang++ reports an error:
      reference to overloaded function could not be resolved; did you mean to call it with no arguments?
   File: 12-task-compile-register-ambiguous.cc
   Line: 23
   Expansion trace:
      from macro "flecsi_internal_return_type" (file 12-task-compile-register-ambiguous.cc, line 23)
      from macro "flecsi_internal_execute_task" (file 12-task-compile-register-ambiguous.cc, line 23)
      from macro "flecsi_execute_task" (file 12-task-compile-register-ambiguous.cc, line 23)

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 8

Note:
   Clang++ reports a note:
      possible target for call
   File: 12-task-compile-register-ambiguous.cc
   Line: 10

Error:
   Clang++ reports an error:
      no type named 'return_type' in 'flecsi::utils::function_traits_u<void>'
   File: 12-task-compile-register-ambiguous.cc
   Line: 23
   Expansion trace:
      from macro "flecsi_internal_return_type" (file /home/staley/flecsi/flecsi/execution/execution.h, line 63)
      from macro "flecsi_internal_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 360)
      from macro "flecsi_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 397)

Error:
   Clang++ reports an error:
      no type named 'arguments_type' in the global namespace
   File: 12-task-compile-register-ambiguous.cc
   Line: 23
   Expansion trace:
      from macro "flecsi_internal_arguments_type" (file /home/staley/flecsi/flecsi/execution/execution.h, line 76)
      from macro "flecsi_internal_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 361)
      from macro "flecsi_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 397)

Error:
   Clang++ reports an error:
      expected unqualified-id
   File: 12-task-compile-register-ambiguous.cc
   Line: 23
   Expansion trace:
      from macro "flecsi_internal_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 361)
      from macro "flecsi_execute_task" (file /home/staley/flecsi/flecsi/execution/execution.h, line 397)

Visiting the C++ abstract syntax tree...

--------------------------------------------------------------------------------
Analysis
--------------------------------------------------------------------------------

Warning:
   Internal warning from the FleCSI Static Analyzer.
   Re: macro "flecsi_register_task".
   Detected call count != detected C++ abstract syntax tree count.
      Macro Calls: 1
      Syntax Tree: 0
   This warning may be spurious, if your code has errors or certain warnings.
   Also, it can occur if the set of C++ files you're analyzing together contain
   more than one application build (analogy: trying to link object files from
   multiple C++ sources that have a main() program). This can happen, e.g., if
   you're reading a cmake-produced .json file from a cmake that emits build
   rules for multiple target applications. If none of the situations described
   here is the case, then please report this warning to us.

Warning:
   Internal warning from the FleCSI Static Analyzer.
   Re: macro "flecsi_execute_task".
   Detected call count != detected C++ abstract syntax tree count.
      Macro Calls: 1
      Syntax Tree: 0
   This warning may be spurious, if your code has errors or certain warnings.
   Also, it can occur if the set of C++ files you're analyzing together contain
   more than one application build (analogy: trying to link object files from
   multiple C++ sources that have a main() program). This can happen, e.g., if
   you're reading a cmake-produced .json file from a cmake that emits build
   rules for multiple target applications. If none of the situations described
   here is the case, then please report this warning to us.

Synopsis:
   12 errors
   2 warnings

--------------------------------------------------------------------------------
Summary
--------------------------------------------------------------------------------

Warning:
   FleCSI static analysis may be incomplete; errors occurred.
